### commands taken from https://gitlab.cern.ch/db/spark-service/docker-registry/blob/laurelin/swan/Dockerfile

##
# BUILDING STEPS - tini-builder
##
FROM gitlab-registry.cern.ch/linuxsupport/cc7-base:latest as tini-builder

RUN mkdir -p /tmp/

RUN yum install -y \
    curl \
    wget && \
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    wget --quiet https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini && \
    mv tini /tmp/tini && \
    chmod +x /tmp/tini

FROM gitlab-registry.cern.ch/linuxsupport/cc7-base:latest
MAINTAINER Prasanth Kothuri <prasanth.kothuri@cern.ch>
MAINTAINER Piotr Mrowczynski <piotr.mrowczynski@cern.ch>

RUN yum -y update && \
    yum -y install \
        bzip2 \
        gcc \
        gcc-c++ \
        git \
        kernel-devel \
        libcurl-openssl-devel \
        libffi-devel \
        make \
        ncurses-devel \
        nano \
        nodejs \
        npm \
        openssl-devel \
        patch \
        sqlite-devel \
        unzip \
        wget \
        which \
        zeromq3-devel \
        zlib-devel \
    yum clean all && \
    rm -rf /var/cache/yum


RUN yum install -y curl atlas \
    yum clean all && rm -r /var/cache/yum/* && \
    rm /bin/sh && \
    ln -sv /bin/bash /bin/sh && \
    chgrp root /etc/passwd && \
    chmod ug+rw /etc/passwd

# Install Python 3
RUN mkdir /tmp/pytmp && \
    cd /tmp/pytmp && \
    wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tgz && \
    tar xzvf Python-3.6.1.tgz && \
    cd /tmp/pytmp/Python-3.6.1 && \
    ./configure --enable-shared && \
    make install && \
    rm -rf /tmp/pytmp

# Set up the LD_LIBRARY_PATH for Pip3 and Python3 to work
ENV LD_LIBRARY_PATH /usr/local/lib/
RUN echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> /etc/environment

# Install the recent pip release
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py && \
    rm get-pip.py

RUN pip3 install --upgrade coffea
RUN mkdir -p /opt/hadoop/jars && \
    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/edu/vanderbilt/accre/laurelin/0.5.1/laurelin-0.5.1.jar && \
    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar && \
    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar && \
    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/lz4/lz4-java/1.5.1/lz4-java-1.5.1.jar && \
    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/tukaani/xz/1.2/xz-1.2.jar

WORKDIR ${SPARK_HOME}/work-dir

COPY --from=tini-builder /tmp/tini /sbin/tini
COPY ./entrypoint.sh /

ENTRYPOINT ["/entrypoint.sh"]

LABEL \
  org.label-schema.version="0.1" \
  org.label-schema.build-date=$BUILD_DATE \
  org.label-schema.vcs-url="https://gitlab.cern.ch/db/spark-service/docker-registry.git" \
  org.label-schema.name="SWAN Spark Docker - CERN Spark on Kubernetes" \
  org.label-schema.vendor="CERN" \
  org.label-schema.schema-version="1.0"




###

#FROM mverzett/urttbar_nano_base:latest
#
#SHELL ["/bin/bash", "-c"]
#
#RUN pip install --no-cache-dir coffea
#
### Set up X509 proxy to run grid
##ENV X509_USER_PROXY /somewhere
#
## Commands to run spark
#RUN mkdir -p /opt/hadoop/jars && \
#    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/edu/vanderbilt/accre/laurelin/0.5.1/laurelin-0.5.1.jar && \
#    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-api/2.11.2/log4j-api-2.11.2.jar && \
#    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar && \
#    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/lz4/lz4-java/1.5.1/lz4-java-1.5.1.jar && \
#    wget -P /opt/hadoop/jars https://repo1.maven.org/maven2/org/tukaani/xz/1.2/xz-1.2.jar
#
#WORKDIR ${SPARK_HOME}/work-dir
#
#COPY --from=tini-builder /tmp/tini /sbin/tini
#COPY ./entrypoint.sh /
#
#ENTRYPOINT ["/entrypoint.sh"]
#
#LABEL \
#  org.label-schema.version="0.1" \
#  org.label-schema.build-date=$BUILD_DATE \
#  org.label-schema.vcs-url="https://gitlab.cern.ch/db/spark-service/docker-registry.git" \
#  org.label-schema.name="SWAN Spark Docker - CERN Spark on Kubernetes" \
#  org.label-schema.vendor="CERN" \
#  org.label-schema.schema-version="1.0"
#
